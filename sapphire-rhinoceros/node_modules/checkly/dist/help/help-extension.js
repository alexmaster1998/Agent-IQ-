"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const examples_1 = require("./examples");
class ChecklyHelpClass extends core_1.Help {
    showRootHelp() {
        var _a, _b;
        // start copy & paste from standard showRootHelp implementation
        let rootTopics = this.sortedTopics;
        let rootCommands = this.sortedCommands;
        const state = (_b = (_a = this.config.pjson) === null || _a === void 0 ? void 0 : _a.oclif) === null || _b === void 0 ? void 0 : _b.state;
        if (state) {
            this.log(state === 'deprecated'
                ? `${this.config.bin} is deprecated`
                : `${this.config.bin} is in ${state}.\n`);
        }
        this.log(this.formatRoot());
        this.log('');
        if (!this.opts.all) {
            rootTopics = rootTopics.filter(t => !t.name.includes(':'));
            rootCommands = rootCommands.filter(c => !c.id.includes(':'));
        }
        if (rootTopics.length > 0) {
            this.log(this.formatTopics(rootTopics));
            this.log('');
        }
        if (rootCommands.length > 0) {
            rootCommands = rootCommands.filter(c => c.id);
            this.log(this.formatCommands(rootCommands));
            this.log('');
        }
        // end
        const examplesString = examples_1.default.reduce((accumulator, example) => {
            return accumulator + `\n- ${example.description}\n\n${this.indent('$ ' + example.command)}\n`;
        }, '');
        this.log(this.section('EXAMPLES', examplesString));
        return Promise.resolve();
    }
}
exports.default = ChecklyHelpClass;
//# sourceMappingURL=help-extension.js.map